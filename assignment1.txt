2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
-->docker pull nginx

3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
-->docker images
o/p:-
REPOSITORY                                            TAG                 IMAGE ID            CREATED             SIZE
nginx                                                 latest              540a289bab6c        12 days ago         126MB
k8s.gcr.io/kube-proxy                                 v1.14.5             468c6baf864b        3 months ago        82.1MB
k8s.gcr.io/kube-apiserver                             v1.14.5             3129b0ba0920        3 months ago        210MB

4. Find out the "Full" ImageId of the image that you pulled and write it below.
-->docker inspect nginx
 o/p :- "Id": "sha256:540a289bab6cb1bf880086a9b803cf0c4cefe38cbb5cdefa199b69614525199f",

5. Create a container of your image 
-->docker create nginx
o/p:-3c6f61bbba96a53f7329810d5813a75e563d26f0b39b3311186cefe20ec4000d

6. List all the running containers
-->docker container ps
o/p:-
CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS  NAMES
f301dd521a3e        1f394ae9e226           "/home/weave/launch.…"   24 minutes ago      Up 24 minutes  k8s_weave_weave-net-m99mb_kube-system_0466c055-fecf-11e9-acba-0242ac110025_1
735326b02fc3        5cd54e388aba           "/usr/local/bin/kube…"   24 minutes ago      Up 24 minutes  k8s_kube-proxy_kube-proxy-lcq7r_kube-system_04667652-fecf-11e9-acba-0242ac110025_0


7. List all the running and stopped containers
-->docker container ps -a
o/p:-
CONTAINER ID        IMAGE                  COMMAND                  CREATED              STATUS                      PORTS           NAMES
3c6f61bbba96        nginx                  "nginx -g 'daemon of…"   About a minute ago   Created           nostalgic_davinci
f301dd521a3e        1f394ae9e226           "/home/weave/launch.…"   22 minutes ago       Up 22 minutes           k8s_weave_weave-net-m99mb_kube-system_0466c055-fecf-11e9-acba-0242ac110025_1
735326b02fc3        5cd54e388aba           "/usr/local/bin/kube…"   22 minutes ago       Up 22 minutes           k8s_kube-proxy_kube-proxy-lcq7r_kube-system_04667652-fecf-11e9-acba-0242ac110025_0
2833ebc12730        k8s.gcr.io/pause:3.1   "/pause"                 22 minutes ago       Up 22 minutes           k8s_POD_kube-proxy-lcq7r_kube-system_04667652-fecf-11e9-acba-0242ac110025_0
bbdfe6da6f47        789b7f496034           "/usr/bin/weave-npc"     22 minutes ago       Up 22 minutes           k8s_weave-npc_weave-net-m99mb_kube-system_0466c055-fecf-11e9-acba-0242ac110025_0
c8751f705fbb        1f394ae9e226           "/home/weave/launch.…"   22 minutes ago       Exited (1) 22 minutes ago           k8s_weave_weave-net-m99mb_kube-system_0466c055-fecf-11e9-acba-0242ac110025_0


8. Find out the "Full" containerId of the container and write it below.
-->docker inspect 3c6f61bbba96
o/p:-
"Id": "b5eae3edce3e35a286accf8006d062ddbca3cbea28e0119b36f66f1c341508a5"

(or)

docker ps
get the container id

docker ps -q --no-trunc | grep b5eae3edce3e
b5eae3edce3e35a286accf8006d062ddbca3cbea28e0119b36f66f1c341508a5


9. Find out how many image layers are used to build this image.
-->docker image inspect nginx -f '{{.RootFS.Layers}}'
o/p:-

[sha256:b67d19e65ef653823ed62a5835399c610a40e8205c16f839c5cc567954fcf594 
sha256:6eaad811af0237b78ba8b44a282d1564259d90007d628a032c5df7e3e2bbb613 sha256:a89b8f05da3a2cbe459ef3fecfec8076fd0a7568db81f9164147b6f642e2dadf]

(or)

-->docker inspect nginx
o/p:-
"RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:b67d19e65ef653823ed62a5835399c610a40e8205c16f839c5cc567954fcf594",
                "sha256:6eaad811af0237b78ba8b44a282d1564259d90007d628a032c5df7e3e2bbb613",
                "sha256:a89b8f05da3a2cbe459ef3fecfec8076fd0a7568db81f9164147b6f642e2dadf"
            ]
        } 

10. Get the Apache Tomcat 7 server image from the docker hub.
-->docker pull tomcat:7
o/p:-
7: Pulling from library/tomcat
9a0b0ce99936: Pull complete
db3b6004c61a: Pull complete
f8f075920295: Pull complete
6ef14aff1139: Pull complete
962785d3b7f9: Pull complete
631589572f9b: Pull complete
c55a0c6f4c7b: Pull complete
379605d88e88: Pull complete
831e6e9c3029: Pull complete
e1417b6fbaf5: Pull complete
Digest: sha256:9b9b01f50a953d3fe24e78404c66cae3372b446d5b162f42c1c64da7e2ec3f51
Status: Downloaded newer image for tomcat:7


11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
-->docker run -d -p 8080:8080 tomcat:7
o/p:-
b223a674af58f7da09556b22bc2a1f868bbfd3a79d478767dda9b937f829c13b


12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
docker inspect b223a674af
o/p:-
IPAddress": "172.18.0.2",

13. Which Port it is using?
-->docker inspect b223a674af
o/p:-
"Ports": {
                "8080/tcp": [
                    {
                        "HostIp": "0.0.0.0",
                        "HostPort": "8080"
                    }
                ]
            }


14. Try to access the Tomcat's home page from your machine/vm.
-->curl 172.18.0.2:8080

15. What is the disk size of Apache Tomcat image?
-->docker images tomcat
o/p:-
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
tomcat              7                   e3a393545a10        2 weeks ago         506MB


16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
-->docker inspect tomcat:7
o/p:-
"Env": [
                "PATH=/usr/local/tomcat/bin:/usr/local/openjdk-8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "LANG=C.UTF-8",
                "JAVA_HOME=/usr/local/openjdk-8",
                "JAVA_VERSION=8u232",
                "JAVA_BASE_URL=https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_",
                "JAVA_URL_VERSION=8u232b09",
                "CATALINA_HOME=/usr/local/tomcat",
                "TOMCAT_NATIVE_LIBDIR=/usr/local/tomcat/native-jni-lib",
                "LD_LIBRARY_PATH=/usr/local/tomcat/native-jni-lib",
                "GPG_KEYS=05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23",
                "TOMCAT_MAJOR=7",
                "TOMCAT_VERSION=7.0.96",
                "TOMCAT_SHA512=a7ab7627ebafab8c5e5b1b09cff3a6e760f45dbc9b9ab235e14532357e47cf3bb6bbcfbdd92cd94561fe471296fd734d221ba8d59e1216a8369d2c39b1a80c98"
            ],
            

17. Find out which port is exposed for tomcat?
-->docker inspect tomcat:7
o/p:-
"ExposedPorts": {
                "8080/tcp": {}

18. Run multiple conntainers of tomcat on different port and access it's home page.
                                :-docker run -d -p 8080:8080 tomcat:7
				:-docker run -d -p 8081:8080 tomcat:latest
				:-curl 172.31.43.95:8080
				:-curl 172.31.43.95:8081


19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
-->1)docker pull ubuntu:18.04
o/p:-
18.04: Pulling from library/ubuntu
7ddbc47eeb70: Pull complete
c1bbdc448b72: Pull complete
8c3b70e39044: Pull complete
45d437916d57: Pull complete
Digest: sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d
Status: Downloaded newer image for ubuntu:18.04

2)docker pull ubuntu:14.04
o/p:-
14.04: Pulling from library/ubuntu
a7344f52cb74: Pull complete
515c9bb51536: Pull complete
e1eabe0537eb: Pull complete
4701f1215c13: Pull complete
Digest: sha256:2f7c79927b346e436cc14c92bd4e5bd778c3bd7037f35bc639ac1589a7acfa90
Status: Downloaded newer image for ubuntu:14.04

20. Run the container of ubuntu in attached mode.
1)docker run -d --name topdemo ubuntu /usr/bin/top -b
2)docker attach topdemo
o/p:-
top - 10:54:06 up 23 min,  0 users,  load average: 1.00, 1.24, 0.83
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
%Cpu(s):  6.6 us,  5.1 sy,  0.0 ni, 87.8 id,  0.2 wa,  0.0 hi,  0.2 si,  0.2 st
KiB Mem :  2048004 total,   270640 free,   599160 used,  1178204 buff/cache
KiB Swap:        0 total,        0 free,        0 used.  1266516 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
    1 root      20   0   36484   2828   2480 R   0.0  0.1   0:00.35 top

top - 10:54:09 up 23 min,  0 users,  load average: 1.00, 1.24, 0.83
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
%Cpu(s):  3.0 us,  1.3 sy,  0.0 ni, 95.1 id,  0.0 wa,  0.0 hi,  0.2 si,  0.3 st
KiB Mem :  2048004 total,   270512 free,   599276 used,  1178216 buff/cache
KiB Swap:        0 total,        0 free,        0 used.  1266400 avail Mem


21. Run the container of another ubuntu in detached mode.
-->docker run --name testmode -d -it ubuntu

22. Check how many ubuntu containers are running and stopped
-->docker ps -a | grep ubuntu

23. Is the tomcat container running? If no, start one.
docker start 037ac81308da

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
                                :-docker ps -a | grep ubuntu
				:-docker start 2691f695aecc
				:-docker attach topdemo

26. Login as root user in ubuntu container
				:-docker exec -it 2691f695aecc /bin/bash 
                                :-default user is root user 
	
27. Create a file with any name in root directory
			 	:-touch testmode
	
28. Install software of your choice in ubuntu container using "apt-get install"
				:-apt-get -y install nginx

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
				:-exit

30. Check if the ubuntu container is running.
				:-docker ps -a | grep ubuntu
