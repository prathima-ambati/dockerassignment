Your company is ready to move forward with using Docker to run their applications. However, they have some complex container apps that can take advantage of the cluster management and orchestration features of Docker swarm. You have been asked to stand up a simple Docker swarm cluster to be used for some initial testing. A set of servers has already been provisioned for this purpose. The swarm cluster should meet the following criteria:

One Swarm manager.

	$ docker swarm init --advertise-addr 192.168.0.23
        Swarm initialized: current node (wo8l2ywcuw5ovzle9kmp28zwu) is now a manager.

output:-
        To add a worker to this swarm, run the following command:

        docker swarm join --token SWMTKN-1-0d6uepqzliu24pmbybp0zbx437y3wrfr44h8afca1817ax32sc-6b1aau2s76sote4vw0tlxpswl 192.168.0.23:2377

        To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Two worker nodes.

	docker swarm join --token SWMTKN-1-0d6uepqzliu24pmbybp0zbx437y3wrfr44h8afca1817ax32sc-6b1aau2s76sote4vw0tlxpswl 192.168.0.23:2377
output:-

	This node joined a swarm as a worker.

All nodes should use Docker CE version 5:18.09.5~3-0~ubuntu-bionic.
Both worker nodes should be joined to the cluster.
Any non-root user should be able to run docker commands on all three servers.

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!


