Your company has recently decided to use Docker to run containers in production. They have built some Docker images to run their own proprietary software and need a place to store and manage these images. You have been asked to build a secure, private Docker registry for use by the company. In order to verify that everything works, you have also been asked to configure a Docker workstation server to push to and pull from the registry.

To complete this lab, ensure that the following requirements are met for the registry:

1. A private Docker registry is running on the Docker registry server using version 2 of the registry image.
2. The container name for the registry should be registry.
3. The registry should always automatically restart if it stops or the Docker daemon or server restarts.
6. The registry should listen on port 443.
	mkdir registry
	mkdir auth
	docker run -d -p 443:443 --restart=always --name registry -v /home/ubuntu/registry/auth:/auth -e REGISTRY_HTTP_ADDR=0.0.0.0:443 -e REGISTRY_AUTH=htpasswd -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /home/ubuntu/registry/auth/certs:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key registry:2
proof:-
	root@ip-172-31-43-168:/home/ubuntu/registry/auth# docker ps
	CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                            NAMES
	939e0dfca371        registry:2          "/entrypoint.sh /etc…"   7 seconds ago       Up 6 seconds        0.0.0.0:443->443/tcp, 5000/tcp   registry
4. The registry should require authentication. Set up an initial account with the username docker and the password d0ck3rrU73z.
	docker run --entrypoint htpasswd registry:2 -Bbn docker d0ck3rrU73z > auth/htpasswd
proof:
	root@ip-172-31-43-168:/home/ubuntu/registry/auth# cat htpasswd
	docker:$2y$05$tH1ikwOrlSSPQNumO4cZPutjYZDUC7hgDtIZBBXx3075Okwtvu93O
5. The registry should use TLS with a self-signed certificate.
	mkdir certs
	openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt



Set up the Docker workstation server to meet the following requirements:

1. Docker is logged in to the private registry.
	docker login localhost:443
	Username: docker
	Password:d0ck3rrU73z
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

2. Docker is configured to accept the self-signed cert. Do not turn off certificate verification using the insecure-registries setting.
3. To confirm that everything is working, push a test image called ip-10-0-1-101:443/test-image:1 to the private registry. You can pull any image from Docker hub and tag it with ip-10-0-1-101:443/test-image:1 as a test.
	docker tag ubuntu localhost:443/ubuntu:1
	docker push localhost:443/ubuntu:1
4. Delete the test image locally and pull it from the registry.
	docker image rm localhost:443/ubuntu:1 ubuntu
	docker pull localhost:443/ubuntu:1

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!