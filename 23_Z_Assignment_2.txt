Your supermarket company is in the process of improving their Docker-based applications. They have built a set of three RESTful data services that communicate with each other as part of a larger infrastructure. You have been given the task of designing a Docker application stack so that these three services can be easily managed and scaled as a unit. A Docker Swarm cluster has already been set up by you to use in previous execises.

Here is some background information on the three services:

1. Fruit Service
	a. Provides a list of fruits sold in the company's stores.
	b. You can use the Docker image tag linuxacademycontent/fruit-service:1.0.1 to run this service.
	c. Listens on port 80.
	d. The service should be named fruit inside the stack.

2. Vegetable Service
	a. Provides a list of vegetables sold in the company's stores.
	b. You can use the Docker image tag linuxacademycontent/vegetable-service:1.0.0 to run this service.
	c. Listens on port 80.
	d. The service should be named vegetables inside the stack.

3. All Products Service
	a. Queries the other two services, combining their data into a single list of all produce.
	b. You can use the Docker image tag linuxacademycontent/all-products:1.0.0 to run this service.
	c. Listens on port 80.
	d. Use the environment variables FRUIT_HOST and FRUIT_PORT to set the host and port which will be used to query the fruit service.
	e. Use the environment variables VEGETABLE_HOST and VEGETABLE_PORT to set the host and port which will be used to query the vegetable service.

Step 1
vi produce.yml
version: '3'
services:
 fruit:
  image: linuxacademycontent/fruit-service:1.0.1
  ports:
   - 8082:80
  environment:
   - FRUIT_HOST=172.31.43.168
   - FRUIT_PORT=8082
 vegetable:
  image: linuxacademycontent/vegetable-service:1.0.0
  ports:
   - 8081:80
  environment:
   - VEGETABLE_HOST=172.31.43.168
   - VEGETABLE_PORT=8081
 allproduct:
  image: linuxacademycontent/all-products:1.0.0
  ports:
   - 8080:80
  environment:
   - VEGETABLE_HOST=172.31.43.168
   - VEGETABLE_PORT=8081
   - FRUIT_HOST=172.31.43.168
   - FRUIT_PORT=8082
   
Deploy a Docker application stack that meets the following specifications:
1. The stack is called produce.
docker stack deploy -c produce.yml  produce

2. The stack runs the Fruit, Vegetable, and All Products services.
3. The All Products service is able to query the Fruit and Vegetable services.
4. The All Products service is published on port 8080.

root@ip-172-31-43-168:/home/ubuntu# docker service ls
ID                  NAME                 MODE                REPLICAS            IMAGE                                         PORTS
vgc852zd2kys        produce_allproduct   replicated          1/1                 linuxacademycontent/all-products:1.0.0        *:8080->80/tcp
mxj6pazic7ji        produce_fruit        replicated          1/1                 linuxacademycontent/fruit-service:1.0.1       *:8082->80/tcp
uxa07xx55gj2        produce_vegetable    replicated          1/1                 linuxacademycontent/vegetable-service:1.0.0   *:8081->80/tcp



One you have deployed the stack, you can verify whether it is working by querying the All Products service:
curl localhost:8081 -->showing vegitables list
curl localhost:8082 -->showing fruits list


curl localhost:8080

root@ip-172-31-43-168:/home/ubuntu# curl localhost:8080
{"description":"A list of all produce.","products":["acorn squash","alfalfa sprout","amaranth","anise","apple","apricot","artichoke","arugula","asparagus","aubergine","avocado","azuki bean","banana","banana squash","basil","bean sprout","beet","bell pepper","bilberry","black bean","black-eyed pea","blackberry","blackcurrant","blood orange","blueberry","bok choy","borlotti bean","boysenberry","breadfruit","broad beans","broccoflower","broccoli","brussels sprout","butternut squash","cabbage","calabrese","canary melon","cantaloupe","caraway","carrot","cauliflower","cayenne pepper","celeriac","celery","chamomile","chard","chayote","cherimoya","cherry","chickpea","chili pepper","chives","cilantro","clementine","cloudberry","coconut","collard green","corn","corn salad","courgette","cranberry","cucumber","cucumber","currant","daikon","damson","date","delicata","dill","dragonfruit","durian","eggplant","eggplant","elderberry","endive","feijoa","fennel","fiddlehead","fig","frisee","garlic","gem squash","ginger","goji berry","gooseberry","grape","grapefruit","green bean","green pepper","guava","habanero","herbs and spice","honeydew","horseradish","hubbard squash","huckleberry","jackfruit","jalapeno","jambul","jerusalem artichoke","jicama","jujube","kale","kidney bean","kiwi fruit","kohlrabi","kumquat","lavender","leek ","legume","lemon","lemon grass","lentils","lettuce","lima bean","lime","loquat","lychee","mamey","mandarine","mangetout","mango","marjoram","mulberry","mung bean","mushroom","mustard green","navy bean","nectarine","new zealand spinach","nopale","nut","okra","olive","onion","orange","oregano","pamelo","papaya","paprika","parsley","parsnip","passionfruit","patty pan","pea","peach","pear","persimmon","physalis","pineapple","pinto bean","plum","pomegranate","pomelo","potato","pumpkin","purple mangosteen","quince","radicchio","radish","raisin","rambutan","raspberry","redcurrant","rhubarb","rock melon","rosemary","runner bean","rutabaga","sage","salal berry","satsuma","scallion","shallot","skirret","snap pea","soy bean","spaghetti squash","spinach","squash ","star fruit","strawberry","sweet potato","tabasco pepper","tamarillo","tangerine","taro","tat soi","thyme","tomato","topinambur","tubers","turnip","ugli fruit","wasabi","water chestnut","watercress","watermelon","white radish","yam","zucchini"]}
If the stack is set up correctly, you should get a combined list of fruits and vegetables.

Step 2
Once you have deployed the stack and verified that it is working, modify the stack by scaling both the Fruit and Vegetable services up to 3 replicas.

docker service scale produce_fruit=3
docker service scale produce_vegetable=3


Good luck!