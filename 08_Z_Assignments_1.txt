Your company is ready to start using Docker on some of their servers. In order to get started, they want you to set up and configure Docker CE on a server that has already been set up. You will need to make sure that the server meets the following specifications:

Docker CE is installed and running on the server.
Use Docker CE version 5:18.09.5~3-0~ubuntu-bionic.
Any non-root user has permission to run docker commands.
The default logging driver is set to syslog.


[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]


Good luck!

************************************************************************************************************************************************************************************************
SET UP THE REPOSITORY

Docker CE is installed and running on the server.
Use Docker CE version 5:18.09.5~3-0~ubuntu-bionic.

step 1:Update the apt package index:

	$ sudo apt-get update

step 2:Install packages to allow apt to use a repository over HTTPS

	$ sudo apt-get install \
          apt-transport-https \
          ca-certificates \
          curl \
         gnupg-agent \
         software-properties-common

step 3:Add Docker’s official GPG key:

        $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.
	$ sudo apt-key fingerprint 0EBFCD88

step 4:Use the following command to set up the stable repository

	sudo add-apt-repository \
   	"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   	$(lsb_release -cs) \
   	stable"
*************************************************************
Use Docker CE version 5:18.09.5~3-0~ubuntu-bionic
*************************************************************
Install Docker CE packages:

step1: Update the apt package index.
	sudo apt-get update
step2:Install the latest version of Docker Engine - Community and containerd, or go to the next step to install a specific version
	sudo apt-get install -y docker-ce=5:18.09.5~3-0~ubuntu-bionic docker-ce-cli=5:18.09.5~3-0~ubuntu-bionic containerd.io
******************************************************************
Any non-root user has permission to run docker commands
******************************************************************
step1:Create the docker group.

	ubuntu@ip-172-31-43-168:~$ sudo adduser cloud_user
o/p:-

Adding user `cloud_user' ...
Adding new group `cloud_user' (1002) ...
Adding new user `cloud_user' (1001) with group `cloud_user' ...
Creating home directory `/home/cloud_user' ...
Copying files from `/etc/skel' ...
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully
Changing the user information for cloud_user
Enter the new value, or press ENTER for the default
        Full Name []: prathima
        Room Number []:
        Work Phone []:
        Home Phone []:
        Other []:
Is the information correct? [Y/n] y

step2:Add your user to the docker group.

	ubuntu@ip-172-31-43-168:~$ sudo usermod -a -G docker cloud_user

step3:login into clou_user

ubuntu@ip-172-31-43-168:~$ sudo su
root@ip-172-31-43-168:/home/ubuntu# login

ip-172-31-43-168 login: cloud_user
Password:
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-1051-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Nov 13 08:26:26 UTC 2019

  System load:  0.08              Processes:              96
  Usage of /:   25.0% of 7.69GB   Users logged in:        1
  Memory usage: 23%               IP address for eth0:    172.31.43.168
  Swap usage:   0%                IP address for docker0: 172.17.0.1

 * Kata Containers are now fully integrated in Charmed Kubernetes 1.16!
   Yes, charms take the Krazy out of K8s Kata Kluster Konstruction.

     https://ubuntu.com/kubernetes/docs/release-notes

29 packages can be updated.
0 updates are security updates.


*** System restart required ***

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

step4:logout from the root user
cloud_user@ip-172-31-43-168:~$ logout

step5: login back to the cloud_user
root@ip-172-31-43-168:/home/ubuntu# login
ip-172-31-43-168 login: cloud_user
Password:
Last login: Wed Nov 13 08:26:26 UTC 2019 on pts/0
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-1051-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Nov 13 08:36:59 UTC 2019

  System load:  0.04              Processes:              99
  Usage of /:   25.0% of 7.69GB   Users logged in:        1
  Memory usage: 23%               IP address for eth0:    172.31.43.168
  Swap usage:   0%                IP address for docker0: 172.17.0.1

 * Kata Containers are now fully integrated in Charmed Kubernetes 1.16!
   Yes, charms take the Krazy out of K8s Kata Kluster Konstruction.

     https://ubuntu.com/kubernetes/docs/release-notes

29 packages can be updated.
0 updates are security updates.


*** System restart required ***
step6:Running the hello-world with out using sudo
 
cloud_user@ip-172-31-43-168:~$ docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

*******************************************************************************************************
default logging driver is set to syslog.
********************************************************************************************************
Docker includes multiple logging mechanisms to help you get information from running containers and services. These mechanisms are called logging drivers.

step1:-check whether deamon.json file available in /etc/docker
	$ cd /etc/docker
	/etc/docker$ ls
	key.json
step2:-if deamon.json file is not exist create under /etc/docker 
	set the value of log-driver to the name of the logging driver in the daemon.json file, 
		which is located in /etc/docker/ on Linux hosts
	
		note : if file daemon.json is already exist no need to cteate 

		{
  		"log-driver": "syslog"
		}
step3:- docker info
o/p:-
Logging Driver: syslog
	







